{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\n  authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\n  projectId: \"crwn-cloting-db-b966e\",\n  storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\n  messagingSenderId: \"226376153469\",\n  appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userAuth) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userAuth, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message"],"sources":["E:/mern/andrei/crwn-cloting/src/util/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n}\r\n    from 'firebase/auth'\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc\r\n} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\r\n    authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\r\n    projectId: \"crwn-cloting-db-b966e\",\r\n    storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\r\n    messagingSenderId: \"226376153469\",\r\n    appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst provider = new GoogleAuthProvider()\r\n\r\nprovider.setCustomParameters({\r\n    prompt: \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth()\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider)\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const createUserDocumentFromAuth = async (userAuth) => {\r\n    const userDocRef = doc(db, 'users', userAuth.uid);\r\n    console.log(userDocRef)\r\n\r\n    const userSnapshot = await getDoc(userDocRef)\r\n    console.log(userSnapshot)\r\n    console.log(userSnapshot.exists());\r\n\r\n    if (!userAuth) {\r\n        const { displayName, email } = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try {\r\n            await setDoc(userAuth, {\r\n                displayName,\r\n                email,\r\n                createdAt\r\n            })\r\n        } catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n\r\n}"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAMS,eANT;AAOA,SACIC,YADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,MAJJ,QAKO,oBALP;AAOA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,uCAFO;EAGnBC,SAAS,EAAE,uBAHQ;EAInBC,aAAa,EAAE,mCAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAIb,kBAAJ,EAAjB;AAEAa,QAAQ,CAACC,mBAAT,CAA6B;EACzBC,MAAM,EAAE;AADiB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MAAMlB,eAAe,CAACiB,IAAD,EAAOH,QAAP,CAAnD;AAEP,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;AAEP,OAAO,MAAMkB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;EAC1D,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;EACAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAI,CAACN,QAAL,EAAe;IACX,MAAM;MAAEO,WAAF;MAAeC;IAAf,IAAyBR,QAA/B;IACA,MAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACA,MAAM1B,MAAM,CAACgB,QAAD,EAAW;QACnBO,WADmB;QAEnBC,KAFmB;QAGnBC;MAHmB,CAAX,CAAZ;IAKH,CAND,CAME,OAAOE,KAAP,EAAc;MACZR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,KAAK,CAACC,OAA7C;IACH;EACJ;AAEJ,CAvBM"},"metadata":{},"sourceType":"module"}