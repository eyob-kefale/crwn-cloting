{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\n  authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\n  projectId: \"crwn-cloting-db-b966e\",\n  storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\n  messagingSenderId: \"226376153469\",\n  appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCatagoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const catagoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return catagoryMap;\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n\n/**\r\n * {\r\n * next:callback,\r\n * error:errorCallback,\r\n * complate:complatedCallback\r\n * } \r\n * \r\n */","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCatagoriesAndDocuments","q","querySnapshot","catagoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["H:/git/crwn-cloting/crwn-cloting/crown-clothing/src/util/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n    onAuthStateChanged\r\n}\r\n    from 'firebase/auth'\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n    collection,\r\n    writeBatch,\r\n    query,\r\n    getDocs\r\n} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\r\n    authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\r\n    projectId: \"crwn-cloting-db-b966e\",\r\n    storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\r\n    messagingSenderId: \"226376153469\",\r\n    appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider()\r\n\r\ngoogleProvider.setCustomParameters({\r\n    prompt: \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth()\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider)\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = collection(db, collectionKey);\r\n    const batch = writeBatch(db)\r\n\r\n    objectsToAdd.forEach((object) => {\r\n        const docRef = doc(collectionRef, object.title.toLowerCase());\r\n        batch.set(docRef, object);\r\n    });\r\n\r\n    await batch.commit();\r\n    console.log('done')\r\n}\r\n\r\nexport const getCatagoriesAndDocuments=async()=>{\r\n    const collectionRef=collection(db,'categories');\r\n    const q=query(collectionRef);\r\n\r\n    const querySnapshot=await getDocs(q);\r\n    const catagoryMap=querySnapshot.docs.reduce((acc,docSnapshot)=>{\r\n        const {title,items} = docSnapshot.data();\r\n        acc[title.toLowerCase()]=items;\r\n        return acc;\r\n    },{});\r\n    return catagoryMap\r\n}\r\n\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n    userAuth, additionalInformation = {}) => {\r\n    if (!userAuth) return;\r\n    const userDocRef = doc(db, 'users', userAuth.uid);\r\n\r\n    const userSnapshot = await getDoc(userDocRef)\r\n\r\n    if (!userSnapshot.exists()) {\r\n        const { displayName, email } = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try {\r\n            await setDoc(userDocRef, {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n    return userDocRef;\r\n}\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if (!email || !password) return;\r\n    return await createUserWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if (!email || !password) return;\r\n    return await signInWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\nexport const onAuthStateChangedListener = (callback) =>\r\n    onAuthStateChanged(auth, callback);\r\n\r\n\r\n\r\n/**\r\n * {\r\n * next:callback,\r\n * error:errorCallback,\r\n * complate:complatedCallback\r\n * } \r\n * \r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}