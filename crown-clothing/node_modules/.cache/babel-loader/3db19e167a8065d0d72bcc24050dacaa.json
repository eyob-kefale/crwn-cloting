{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\n  authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\n  projectId: \"crwn-cloting-db-b966e\",\n  storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\n  messagingSenderId: \"226376153469\",\n  appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword"],"sources":["H:/MERN/andrei/crwn-cloting/src/util/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword\r\n}\r\n    from 'firebase/auth'\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc\r\n} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\r\n    authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\r\n    projectId: \"crwn-cloting-db-b966e\",\r\n    storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\r\n    messagingSenderId: \"226376153469\",\r\n    appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider()\r\n\r\ngoogleProvider.setCustomParameters({\r\n    prompt: \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth()\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider)\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n    userAuth, additionalInformation = {}) => {\r\n    if (!userAuth) return;\r\n    const userDocRef = doc(db, 'users', userAuth.uid);\r\n\r\n    const userSnapshot = await getDoc(userDocRef)\r\n\r\n    if (!userSnapshot.exists()) {\r\n        const { displayName, email } = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try {\r\n            await setDoc(userDocRef, {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n    return userDocRef;\r\n}\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if (!email || !password) return;\r\n    return await createUserWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if (!email || !password) return;\r\n    return await signInWithEmailAndPassword(auth, email, password)\r\n}"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,8BALJ,EAMIC,0BANJ,QAQS,eART;AASA,SACIC,YADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,MAJJ,QAKO,oBALP;AAOA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,uCAFO;EAGnBC,SAAS,EAAE,uBAHQ;EAInBC,aAAa,EAAE,mCAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGlB,aAAa,CAACW,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIf,kBAAJ,EAAvB;AAEAe,cAAc,CAACC,mBAAf,CAAmC;EAC/BC,MAAM,EAAE;AADuB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGrB,OAAO,EAApB;AACP,OAAO,MAAMsB,qBAAqB,GAAG,MAAMpB,eAAe,CAACmB,IAAD,EAAOH,cAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMtB,kBAAkB,CAACoB,IAAD,EAAOH,cAAP,CAAzD;AAEP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,gBACtCC,QADsC,EACG;EAAA,IAA/BC,qBAA+B,uEAAP,EAAO;EACzC,IAAI,CAACD,QAAL,EAAe;EACf,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IACxB,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBP,QAA/B;IACA,MAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACA,MAAM1B,MAAM,CAACmB,UAAD,EAAa;QACrBI,WADqB;QAErBC,KAFqB;QAGrBC,SAHqB;QAIrB,GAAGP;MAJkB,CAAb,CAAZ;IAMH,CAPD,CAOE,OAAOS,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACG,OAA7C;IACH;EACJ;;EACD,OAAOX,UAAP;AACH,CAvBM;AAyBP,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAP,EAAcQ,QAAd,KAA2B;EACzE,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;EACzB,OAAO,MAAMrC,8BAA8B,CAACiB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAA3C;AACH,CAHM;AAKP,OAAO,MAAMC,kCAAkC,GAAG,OAAOT,KAAP,EAAcQ,QAAd,KAA2B;EACzE,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;EACzB,OAAO,MAAMpC,0BAA0B,CAACgB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAAvC;AACH,CAHM"},"metadata":{},"sourceType":"module"}