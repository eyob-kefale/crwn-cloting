{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\n  authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\n  projectId: \"crwn-cloting-db-b966e\",\n  storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\n  messagingSenderId: \"226376153469\",\n  appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n\n/**\r\n * {\r\n * next:callback,\r\n * error:errorCallback,\r\n * complate:complatedCallback\r\n * } \r\n * \r\n */","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["H:/git/crwn-cloting/crwn-cloting/crown-clothing/src/util/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n    onAuthStateChanged\r\n}\r\n    from 'firebase/auth'\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n    collection\r\n} from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAQr2RcuduHQS-BU-UixCK4KB95a8NRwLU\",\r\n    authDomain: \"crwn-cloting-db-b966e.firebaseapp.com\",\r\n    projectId: \"crwn-cloting-db-b966e\",\r\n    storageBucket: \"crwn-cloting-db-b966e.appspot.com\",\r\n    messagingSenderId: \"226376153469\",\r\n    appId: \"1:226376153469:web:8c8bcb1ceadac842353414\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider()\r\n\r\ngoogleProvider.setCustomParameters({\r\n    prompt: \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth()\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider)\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const addCollectionAndDocuments=async(collectionKey,objectsToAdd)=>{\r\n    const collectionRef=collection(db,collectionKey);\r\n}\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n    userAuth, additionalInformation = {}) => {\r\n    if (!userAuth) return;\r\n    const userDocRef = doc(db, 'users', userAuth.uid);\r\n\r\n    const userSnapshot = await getDoc(userDocRef)\r\n\r\n    if (!userSnapshot.exists()) {\r\n        const { displayName, email } = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try {\r\n            await setDoc(userDocRef, {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n    return userDocRef;\r\n}\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if (!email || !password) return;\r\n    return await createUserWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if (!email || !password) return;\r\n    return await signInWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\nexport const signOutUser = async() =>await signOut(auth);\r\nexport const onAuthStateChangedListener=(callback)=>\r\n onAuthStateChanged(auth,callback);\r\n\r\n\r\n\r\n/**\r\n * {\r\n * next:callback,\r\n * error:errorCallback,\r\n * complate:complatedCallback\r\n * } \r\n * \r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}